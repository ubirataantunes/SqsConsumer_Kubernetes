# k8s/deployment.yaml

# 1. Serviço para o LocalStack (para que os pods do consumidor o encontrem)
apiVersion: v1
kind: Service
metadata:
  name: localstack-service
spec:
  selector:
    app: localstack # Este seletor é importante para o pod do localstack
  ports:
    - protocol: TCP
      port: 4566
      targetPort: 4566
---
# 2. Implantação do LocalStack dentro do Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: localstack-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: localstack
  template:
    metadata:
      labels:
        app: localstack
    spec:
      containers:
        - name: localstack
          image: localstack/localstack:latest
          ports:
            - containerPort: 4566
          env:
            - name: SERVICES
              value: "sqs"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
---
# 3. ConfigMap para as configurações da nossa API
apiVersion: v1
kind: ConfigMap
metadata:
  name: sqs-consumer-config
data:
  # O ServiceURL agora aponta para o serviço Kubernetes do LocalStack
  AWS__ServiceURL: "http://localstack-service:4566"
  AWS__QueueName: "minha-fila-processamento"
---
# 4. A implantação do nosso Consumidor .NET
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqs-consumer-deployment
spec:
  replicas: 1 # Começamos com 1 pod
  selector:
    matchLabels:
      app: sqs-consumer
  template:
    metadata:
      labels:
        app: sqs-consumer
    spec:
      containers:
        - name: sqs-consumer-container
          # ATENÇÃO: Troque 'seu-usuario/sqs-consumer-api' pela sua imagem
          image: seu-usuario/sqs-consumer-api:v1
          imagePullPolicy: IfNotPresent # Importante para usar imagens locais
          envFrom:
            - configMapRef:
                name: sqs-consumer-config
          resources:
            requests:
              cpu: "100m" # Solicitação mínima de CPU
            limits:
              cpu: "500m" # Limite máximo de CPU
---
# 5. Horizontal Pod Autoscaler (HPA) - A Mágica da Escalabilidade
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sqs-consumer-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sqs-consumer-deployment
  minReplicas: 1
  maxReplicas: 10 # Pode escalar até 10 pods
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50 # Se o uso de CPU passar de 50%, crie mais pods